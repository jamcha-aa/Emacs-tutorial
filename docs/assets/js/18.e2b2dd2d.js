(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{196:function(e,n,t){"use strict";t.r(n);var r=t(0),a=Object(r.a)({},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"content"},[e._m(0),e._v(" "),t("p",[e._v("「前々回ってコマンド 2 つしか紹介しなかったじゃん？」「ああ」「前回いくつかコマンド紹介したじゃん？」「そうだな」「私がふだん使ってるのって C-x b だけなんだ」「え」「チュートリアルが進むごとにどんどん展開が遅くなってるような気がして」「う…うむ」")]),e._v(" "),t("p",[e._v("「出口が見えない沼を歩きつづけているような不安を感じる」「いま，全体のどれくらいなんだ？」「半分ちょっと…」")]),e._v(" "),t("p",[e._v("「…」「…」「とりあえず先に進もう。足を踏み出さなければゴールにたどりつかない」")]),e._v(" "),t("p",[e._v("「…ゴールってどこにあるんだろうね…」「…」「君，見える？」")]),e._v(" "),t("br"),e._v(" "),t("p",[e._v("「見える」「え？」「だって，スタート地点はもう見えないだろう？」「…うん」「私たちはそれだけ進んできたんだ。だからいずれゴールは見えてくる。間違いなく」")]),e._v(" "),t("br"),e._v(" "),t("p",[e._v("「Emacs のチュートリアルにこれだけ真面目に取り組んでるのってさ，私たちが初めてなんじゃないかな？」「ああ。ゴールまで走り抜ければ，間違いない」")]),e._v(" "),t("p",[e._v("「…行こう。一緒に!」「ああ!」")]),e._v(" "),t("br"),e._v(" "),e._m(1),e._v(" "),t("p",[e._v("「意気揚々と歩きだした私たちの前に表れたのは，これから様々なコマンドが襲いかかってくるであろう，そう予感させる記述であった」「…」「もはや満身創痍の私たちに生きのびる術は残されているのだろうか」「待て。まだそうと決まったわけじゃない。先に進もう」「そうして私を促す EeePC。だがその表情には不安が広がっている」「待て。勝手に判断するな」")]),e._v(" "),t("br"),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),t("br"),e._v(" "),e._m(4),e._v(" "),t("p",[e._v("「あれ？私 C-z って何に割りあててたっけ…」「おい」「あ，"),t("a",{attrs:{href:"https://ja.osdn.net/projects/gnupack/",target:"_blank",rel:"noopener noreferrer"}},[e._v("gnupack"),t("OutboundLink")],1),e._v("だと C-z はスクロールダウン (C-v) になってるんだ」「使わないのか？」「うん。C-z は，コントロールキーを Caps Lock に入れ替えてたり，小指の付け根で押してたりする人だと楽だと思う。けど私はコントロールキーを無変換に割り当ててるから」「じゃあ Caps Lock は何のキーにしてるんだ？まさかそのままなわけないだろう？」「"),t("a",{attrs:{href:"https://github.com/jamcha-aa/xkb",target:"_blank",rel:"noopener noreferrer"}},[e._v("skk の sticky shift キーにしてます"),t("OutboundLink")],1),e._v("」「よくわからんが有効に使ってるんだな」「…」")]),e._v(" "),t("p",[e._v("「ところで君はここで書かれている方法を使うのか？」「Emacs の中断？初めて見たかも」「おい」「もしくははるか昔に見て忘れたか」「困らないのか？」「シェルコマンドなら Emacs の中から起動するし，"),t("a",{attrs:{href:"https://github.com/tmux/tmux/wiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("tmux"),t("OutboundLink")],1),e._v("とか使えばターミナルの中でも画面分割できるし」「やらない理由ならいくらでも作れることを忘れるなよ」「ごめんなさい。C-x C-z で抜けて，fg で復帰ね」「そうだ。このチュートリアルはコメントするためではなくて，新しいことを学ぶためにあることを忘れるなよ」「わかりました先生!」")]),e._v(" "),t("br"),e._v(" "),e._m(5),e._v(" "),t("p",[e._v("「Emacs 使い始めた頃は何かあったら C-x C-c で終了してもいいかも」「ふむ」「とりあえずはじめは C-x C-c と C-g 覚えておけばなんとかなると思う」「ほう」「ファイルはドラッグアンドドロップで開くし」「チュートリアル的には感心しないが，まあ，いいだろう」")]),e._v(" "),t("br"),e._v(" "),e._m(6),e._v(" "),t("p",[e._v("「こんなにあったっけ？」「おい!」「あと C-x u は C-/の方が便利だよ!お忘れなく!」")]),e._v(" "),t("br"),e._v(" "),e._m(7),e._v(" "),t("p",[e._v("「先生!発言をしてもよろしいでしょうか!」「何かね。言ってみたまえ」「…それが君の思う『先生』なの？」「違うのか？」「悪いことした子供の頭を革靴でひっぱたいたりするでしょ」「靴は使わん。ぶ厚い辞書だ」「…」")]),e._v(" "),t("p",[e._v("「話を戻そうか。何だ？」「今までコマンドの補完はタブでおこなってました。スペースキーでも補完してくれるなんて初めて知った」「今後は使うのか？」「慣れるかしばらく試してみる」")]),e._v(" "),t("p",[e._v("「他には？」「Emacs ではタブキーの代わりに C-i を使う。"),t("a",{attrs:{href:"https://github.com/k1LoW/emacs-drill-instructor/wiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("鬼軍曹.el"),t("OutboundLink")],1),e._v("を入れると鍛えてくれる。でも私はタブキーを使います!」「おい!また矢印キーみたいな言い訳するのか」「"),t("a",{attrs:{href:"https://github.com/ch11ng/exwm",target:"_blank",rel:"noopener noreferrer"}},[e._v("exwm"),t("OutboundLink")],1),e._v("でふつうのブラウザも使うから C-i が暴発すると困る」「うーむ…それならしょうがない，のか？」")]),e._v(" "),e._m(8),e._v(" "),e._m(9),e._v(" "),t("p",[e._v("「ふむ，ファイルサイズはともかく，文字数はプログラミングで必要な情報なのか？」「"),t("a",{attrs:{href:"http://www.stallman.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("この Emacs 作った人"),t("OutboundLink")],1),e._v("は"),t("a",{attrs:{href:"https://lists.gnu.org/archive/html/emacs-devel/2013-11/msg00515.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Emacs にワープロ機能を持たせたい"),t("OutboundLink")],1),e._v("って"),t("a",{attrs:{href:"https://lists.gnu.org/archive/html/emacs-devel/2018-03/msg00089.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("ずっと言ってる"),t("OutboundLink")],1),e._v("から，文章書くのに役立つ機能がついてるのかも」「この Emacs？」「"),t("a",{attrs:{href:"http://finseth.com/emacs.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Emacs はいろんな種類があるから"),t("OutboundLink")],1),e._v("」")]),e._v(" "),t("br"),e._v(" "),t("br"),e._v(" "),t("p",[e._v("(c) 2018 jamcha (jamcha.aa@gmail.com). (c) 1985, 1996, 1998, 2001-2018 Free Software Foundation, Inc.")]),e._v(" "),e._m(10)])},[function(){var e=this.$createElement,n=this._self._c||e;return n("h1",{attrs:{id:"_14-コマゴマとしたコマンド"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_14-コマゴマとしたコマンド","aria-hidden":"true"}},[this._v("#")]),this._v(" 14 - コマゴマとしたコマンド")])},function(){var e=this.$createElement,n=this._self._c||e;return n("pre",[n("code",[this._v("＊コマンドの拡張\n================\n\nEmacs には、コントロール文字やメタ文字に割当てられるよりもずっとずっと\n多くのコマンドがあります。これらを扱うために、拡張（eXtend）コマンドを\n使います。それには、以下の２つの種類があります。\n\n   C-x     文字による拡張。続けて一文字を入力します。\n   M-x     名前による拡張。続けてコマンドの名前を入力します。\n\nこれらは、一般的には便利だけれども、これまで見てきたものほどは頻繁に用\nいられないコマンドです。C-x C-f（ファイルを開く）や C-x C-s（ファイル\nをセーブ）はこの仲間です。他に、C-x C-c（Emacs を終了）もそうです。C-x\nC-c に関しては、それまでに加えた変更が無くなるのを心配する必要はありま\nせん。Emacs を終了させる前に、変更された各ファイルをセーブするかどうか\n聞いてきますから。\n")])])},function(){var e=this.$createElement,n=this._self._c||e;return n("pre",[n("code",[this._v("If you are using a graphical display, you don't need any special\ncommand to move from Emacs to another application.  You can do this\nwith the mouse or with window manager commands.  However, if you're\nusing a text terminal which can only show one application at a time,\nyou need to \"suspend\" Emacs to move to any other application.\n")])])},function(){var e=this.$createElement,n=this._self._c||e;return n("blockquote",[n("p",[this._v("もしグラフィカルディスプレイを使っているなら，Emacs から他のアプリケーションにうつるための特殊なコマンドは必要ありません。マウスやウインドウマネージャのコマンドを使いましょう。しかし，もしテキスト端末を使っていて一度にひとつのアプリケーションを表示できないのなら，他のアプリケーションにうつるために Emacs を「中断」させなければなりません。")])])},function(){var e=this.$createElement,n=this._self._c||e;return n("pre",[n("code",[this._v("C-z は「一時的に」Emacs を抜けるコマンドです。また同じ Emacs セッショ\n** C-z has been rebound, but you can use C-x C-z instead [More] **\nンに戻ることができます。\n\nそれができるシステム上なら、C-z は Emacs を「中断」させます。つまり\nEmacs を終了することなく、コマンドシェルに戻ることができます。大方の標\n準的なシェルなら、「fg」 コマンドもしくは 「%emacs」 によって Emacs を再開\nできます。\n\n「中断」機能を実装していないシステムでは、C-z は Emacs の下で走るサブ\nシェルを作り、他のプログラムを走らせてからまた Emacs に戻ることができ\nるようにします。この場合本当に Emacs から抜け出るわけではありませんの\nで、シェルコマンドの 「exit」 がそのサブシェルから Emacs に戻る普通のや\nり方です。\n")])])},function(){var e=this.$createElement,n=this._self._c||e;return n("pre",[n("code",[this._v("C-x C-c はログアウトしようと思う時に使うものです。メールツール（mail\nコマンド等）やその他の様々なアプリケーションプログラムが起動した Emacs\nから抜け出る場合に使うのも正しいやり方です。これらのプログラムは Emacs\nの中断にどう対処して良いか知らないでしょうから。\n")])])},function(){var e=this.$createElement,n=this._self._c||e;return n("pre",[n("code",[this._v("C-x コマンドはたくさんあります。これまでに、以下を学びました。\n\nC-x C-f   ファイルを開く（Find）\nC-x C-s   ファイルのセーブ（Save）\nC-x C-b   バッファのリストアップ\nC-x C-c   Emacs を終了\nC-x 1     ウィンドウを１つにする（つまり他のウィンドウを全部消す）\nC-x u\t  取り消し\n")])])},function(){var e=this.$createElement,n=this._self._c||e;return n("pre",[n("code",[this._v('名前による拡張コマンドには、あまり使わないものや、特定のモードでしか使\nわないものがあります。たとえば replace-string ですが、これは文字列を置\n換するものです。M-x をタイプすると、Emacs は画面の最下行に M-x と表示\nし入力を促すので、そこにコマンドの名前（この場合 "replace-string"）を\n入れなければなりません。"repl s<TAB>" とだけタイプすると Emacs がコマ\nンド名を補完してくれます。（<TAB> はタブキーです。普通は、キーボードの\n左端、CapsLock もしくは Shift キーの近くにあります。）コマンド名を入れ\nたら <Return> を打って下さい。\n\n"Replace string" コマンドには引数が二つ必要です。どの文字列をどう置換\nするかです。各引数を入力するたびに <Return> を打って下さい。\n\n>> カーソルをここから２行下の空行に移動させて下さい。\n   M-x repl s<Return>changed<Return>Altered<Return> とタイプしましょう。\n\n   この行がどう変わるか(changed)見ましょう。あなたはカーソル以降全部の\n   c-h-a-n-g-e-d という語を "altered" に変えたのです。\n')])])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[this._v("「あとひとつ」「？」「M-x replace-string の代わりに "),n("strong",[this._v("M-%")]),this._v(" が使える。置換はよく使うから覚えると便利」「ほう」")])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[this._v("「あ，もうひとつ!」「何だ」「物書きの人向けの機能なんだけど，C-SPC で範囲指定して "),n("strong",[this._v("M-=")]),this._v(" すると，一番下 (エコーエリア) に文字数が表示される」「ほう。これは君のためにあるような機能じゃないか」「これ知ってからずっと使ってる。すごく便利」")])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[n("img",{attrs:{src:"https://www.gnu.org/graphics/gplv3-88x31.png",alt:"GPL3"}})])}],!1,null,null,null);a.options.__file="14.md";n.default=a.exports}}]);